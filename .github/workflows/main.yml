# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_ros:
    name: Build ROS1 workspace
    strategy:
      matrix:
        os: [ubuntu-18.04]
        include:
          - os: ubuntu-18.04
            distro: melodic
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    container:
      image:  osrf/ros:${{ matrix.distro }}-desktop
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Compilation settings
      run: |
        sudo apt-get update -y
        sudo apt-get -y install gcc-8 g++-8 rsync libyaml-cpp-dev libcurl4-openssl-dev lsb-release wget software-properties-common gnupg 
        sudo apt-get -y install python3-catkin-tools ros-${{ matrix.distro }}-joy ros-${{ matrix.distro }}-tf2-geometry-msgs
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
      
    - name: Setup AirSim 
      run: |
        ./setup.sh
        ./build.sh
      working-directory: ./AirSim
       
    - name: Build catkin ws
      run: |
        source /opt/ros/${{ matrix.distro }}/setup.bash
        set -ex o pipefail
        catkin build 
      working-directory: ./ros 
      shell: bash
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
  
  build_ros2:
    name: Build ROS2 workspace
    strategy:
      matrix:
        compiler: [ g++, clang++ ]
        os: [ubuntu-20.04, ubuntu-22.04]
        include:
          - os: ubuntu-22.04
            distro: humble
          - os: ubuntu-20.04
            distro: foxy
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    container:      
      image:  osrf/ros:${{ matrix.distro }}-desktop
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Compilation Settings
        run: |
          apt-get update -y
          apt-get install -y rsync wget libyaml-cpp-dev clang lsb-release wget software-properties-common gnupg
          wget -O /tmp/cmake.sh https://apt.kitware.com/kitware-archive.sh
          chmod u+x /tmp/cmake.sh
          /tmp/cmake.sh && rm /tmp/cmake.sh
          apt-get update -y && apt-get install -y --no-install-recommends cmake
      - name: Setup AirSim
        run : |
          ./setup.sh
          ./build.sh
        working-directory: AirSim
      - name: Build ros2 workspace
        shell: bash
        run: |
          source /opt/ros/${{ matrix.distro }}/setup.bash
          colcon build --cmake-args -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        working-directory: ros2
